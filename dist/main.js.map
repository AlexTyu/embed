{"version":3,"sources":["../src/main.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAM,cAAc,GAAG,CACtB,KAAK,EACL,QAAQ,EACR,UAAU,EACV,UAAU,EACV,UAAU,EACV,OAAO,EACP,MAAM,EACN,WAAW,EACX,MAAM,EACN,OAAO,EACP,UAAU,EACV,SAAS,EACT,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,OAAO,EACP,OAAO,EACP,QAAQ,EACR,UAAU,EACV,QAAQ,CACR,CAAA;;AAED,IAAM,gBAAgB,GAAG,CACvB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAC3E,CAAA;;IAEK,KAAK;AACT,WADI,KAAK,CACG,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE;0BADtC,KAAK;;AAEP,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,eAAe,EAAE,CAAC;GACxB;;eAJG,KAAK;;sCAMS;AAChB,UAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;AACtC,UAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AAClD,cAAM,IAAI,KAAK,wBAAsB,MAAM,CAAC,QAAQ,4BAAuB,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,CAAC;OACzG;AACD,UAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;AAC1C,UAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACxC,UAAI,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;AACtD,cAAM,IAAI,KAAK,2BAAyB,MAAM,CAAC,QAAQ,8BAAyB,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,CAAC;OAChH;KACF;;;yCAEoB,GAAG,EAAE;AACxB,UAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;AAClC,cAAM,IAAI,KAAK,+BAA6B,GAAG,OAAI,CAAC;OACrD;KACF;;;0BAEK,IAAI,EAAE;AACV,UAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,YAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;OACrC;;AAED,UAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9C,YAAM,CAAC,YAAY,CAAC,KAAK,4BAA0B,IAAI,CAAC,MAAM,CAAC,QAAQ,SAAI,IAAI,CAAC,MAAM,CAAC,YAAY,SAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,CAAC;;AAEjI,UAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC1B;;;SAjCG,KAAK;;;kBAoCI,KAAK","file":"main.js","sourcesContent":["// TODO generate this and corresponding validCurrencyPairs\n// using config from go codebase\nconst validExchanges = [\n\t'796',\n\t'bitmex',\n\t'bitfinex',\n\t'bitflyer',\n\t'bitstamp',\n\t'bitvc',\n\t'bitx',\n\t'btc-china',\n\t'btce',\n\t'cexio',\n\t'coinbase',\n\t'cryptsy',\n\t'gemini',\n\t'huobi',\n\t'kraken',\n\t'mexbt',\n\t'mtgox',\n\t'okcoin',\n\t'poloniex',\n\t'quoine'\n]\n\nconst validTimePeriods = [\n  '1', '3', '5', '15', '30', '1H', '2H', '4H', '6H', '12H', '1D', '3D', '1W'\n]\n\nclass Embed {\n  constructor(exchange, currencyPair, opts) {\n    this.config = config;\n    this._validateConfig();\n  }\n\n  _validateConfig() {\n    this._assertConfigDefined('exchange');\n    if (validExchanges.indexOf(config.exchange) === -1) {\n      throw new Error(`Unknown exchange \"${config.exchange}\"\\nValid exchanges: ${validExchanges.join(', ')}`);\n    }\n    this._assertConfigDefined('currencyPair');\n    this._assertConfigDefined('timePeriod');\n    if (validTimePeriods.indexOf(config.timePeriod) === -1) {\n      throw new Error(`Unknown time period \"${config.exchange}\"\\nValid timePeriods: ${validTimePeriods.join(', ')}`);\n    }\n  }\n\n  _assertConfigDefined(key) {\n    if (this.config[key] === undefined) {\n      throw new Error(`Missing required config \"${key}\"`);\n    }\n  }\n\n  mount(elem) {\n    if (typeof elem === 'string') {\n      elem = document.querySelector(elem);\n    }\n\n    let iframe = document.createElement('iframe');\n    iframe.setAttribute('src', `https://cryptowat.ch/${this.config.exchange}/${this.config.currencyPair}/${this.config.timePeriod}`);\n\n    elem.appendChild(iframe);\n  }\n}\n\nexport default Embed;\n"]}